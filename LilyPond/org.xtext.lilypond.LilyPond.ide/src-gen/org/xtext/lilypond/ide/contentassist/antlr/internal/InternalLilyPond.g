/*
 * generated by Xtext 2.25.0
 */
grammar InternalLilyPond;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.lilypond.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.lilypond.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.lilypond.services.LilyPondGrammarAccess;

}
@parser::members {
	private LilyPondGrammarAccess grammarAccess;

	public void setGrammarAccess(LilyPondGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleFile
entryRuleFile
:
{ before(grammarAccess.getFileRule()); }
	 ruleFile
{ after(grammarAccess.getFileRule()); } 
	 EOF 
;

// Rule File
ruleFile 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFileAccess().getGroup()); }
		(rule__File__Group__0)
		{ after(grammarAccess.getFileAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVersion
entryRuleVersion
:
{ before(grammarAccess.getVersionRule()); }
	 ruleVersion
{ after(grammarAccess.getVersionRule()); } 
	 EOF 
;

// Rule Version
ruleVersion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVersionAccess().getGroup()); }
		(rule__Version__Group__0)
		{ after(grammarAccess.getVersionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHeader
entryRuleHeader
:
{ before(grammarAccess.getHeaderRule()); }
	 ruleHeader
{ after(grammarAccess.getHeaderRule()); } 
	 EOF 
;

// Rule Header
ruleHeader 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHeaderAccess().getGroup()); }
		(rule__Header__Group__0)
		{ after(grammarAccess.getHeaderAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTitle
entryRuleTitle
:
{ before(grammarAccess.getTitleRule()); }
	 ruleTitle
{ after(grammarAccess.getTitleRule()); } 
	 EOF 
;

// Rule Title
ruleTitle 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTitleAccess().getGroup()); }
		(rule__Title__Group__0)
		{ after(grammarAccess.getTitleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleScore
entryRuleScore
:
{ before(grammarAccess.getScoreRule()); }
	 ruleScore
{ after(grammarAccess.getScoreRule()); } 
	 EOF 
;

// Rule Score
ruleScore 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScoreAccess().getGroup()); }
		(rule__Score__Group__0)
		{ after(grammarAccess.getScoreAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStaff
entryRuleStaff
:
{ before(grammarAccess.getStaffRule()); }
	 ruleStaff
{ after(grammarAccess.getStaffRule()); } 
	 EOF 
;

// Rule Staff
ruleStaff 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStaffAccess().getGroup()); }
		(rule__Staff__Group__0)
		{ after(grammarAccess.getStaffAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleKey
entryRuleKey
:
{ before(grammarAccess.getKeyRule()); }
	 ruleKey
{ after(grammarAccess.getKeyRule()); } 
	 EOF 
;

// Rule Key
ruleKey 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getKeyAccess().getGroup()); }
		(rule__Key__Group__0)
		{ after(grammarAccess.getKeyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTime
entryRuleTime
:
{ before(grammarAccess.getTimeRule()); }
	 ruleTime
{ after(grammarAccess.getTimeRule()); } 
	 EOF 
;

// Rule Time
ruleTime 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeAccess().getGroup()); }
		(rule__Time__Group__0)
		{ after(grammarAccess.getTimeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbsolute
entryRuleAbsolute
:
{ before(grammarAccess.getAbsoluteRule()); }
	 ruleAbsolute
{ after(grammarAccess.getAbsoluteRule()); } 
	 EOF 
;

// Rule Absolute
ruleAbsolute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbsoluteAccess().getGroup()); }
		(rule__Absolute__Group__0)
		{ after(grammarAccess.getAbsoluteAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNote
entryRuleNote
:
{ before(grammarAccess.getNoteRule()); }
	 ruleNote
{ after(grammarAccess.getNoteRule()); } 
	 EOF 
;

// Rule Note
ruleNote 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNoteAccess().getGroup()); }
		(rule__Note__Group__0)
		{ after(grammarAccess.getNoteAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOctaveRep
entryRuleOctaveRep
:
{ before(grammarAccess.getOctaveRepRule()); }
	 ruleOctaveRep
{ after(grammarAccess.getOctaveRepRule()); } 
	 EOF 
;

// Rule OctaveRep
ruleOctaveRep 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOctaveRepAccess().getAlternatives()); }
		(rule__OctaveRep__Alternatives)
		{ after(grammarAccess.getOctaveRepAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQuote
entryRuleQuote
:
{ before(grammarAccess.getQuoteRule()); }
	 ruleQuote
{ after(grammarAccess.getQuoteRule()); } 
	 EOF 
;

// Rule Quote
ruleQuote 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQuoteAccess().getApostropheKeyword()); }
		'\''
		{ after(grammarAccess.getQuoteAccess().getApostropheKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComma
entryRuleComma
:
{ before(grammarAccess.getCommaRule()); }
	 ruleComma
{ after(grammarAccess.getCommaRule()); } 
	 EOF 
;

// Rule Comma
ruleComma 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommaAccess().getCommaKeyword()); }
		','
		{ after(grammarAccess.getCommaAccess().getCommaKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLyrics
entryRuleLyrics
:
{ before(grammarAccess.getLyricsRule()); }
	 ruleLyrics
{ after(grammarAccess.getLyricsRule()); } 
	 EOF 
;

// Rule Lyrics
ruleLyrics 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLyricsAccess().getGroup()); }
		(rule__Lyrics__Group__0)
		{ after(grammarAccess.getLyricsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule NoteName
ruleNoteName
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNoteNameAccess().getAlternatives()); }
		(rule__NoteName__Alternatives)
		{ after(grammarAccess.getNoteNameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OctaveRep__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOctaveRepAccess().getGroup_0()); }
		(rule__OctaveRep__Group_0__0)
		{ after(grammarAccess.getOctaveRepAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getOctaveRepAccess().getGroup_1()); }
		(rule__OctaveRep__Group_1__0)
		{ after(grammarAccess.getOctaveRepAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NoteName__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNoteNameAccess().getAEnumLiteralDeclaration_0()); }
		('a')
		{ after(grammarAccess.getNoteNameAccess().getAEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getNoteNameAccess().getBEnumLiteralDeclaration_1()); }
		('b')
		{ after(grammarAccess.getNoteNameAccess().getBEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getNoteNameAccess().getCEnumLiteralDeclaration_2()); }
		('c')
		{ after(grammarAccess.getNoteNameAccess().getCEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getNoteNameAccess().getDEnumLiteralDeclaration_3()); }
		('d')
		{ after(grammarAccess.getNoteNameAccess().getDEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getNoteNameAccess().getEEnumLiteralDeclaration_4()); }
		('e')
		{ after(grammarAccess.getNoteNameAccess().getEEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getNoteNameAccess().getFEnumLiteralDeclaration_5()); }
		('f')
		{ after(grammarAccess.getNoteNameAccess().getFEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getNoteNameAccess().getGEnumLiteralDeclaration_6()); }
		('g')
		{ after(grammarAccess.getNoteNameAccess().getGEnumLiteralDeclaration_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__File__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__File__Group__0__Impl
	rule__File__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__File__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFileAccess().getFileAction_0()); }
	()
	{ after(grammarAccess.getFileAccess().getFileAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__File__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__File__Group__1__Impl
	rule__File__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__File__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFileAccess().getVersionAssignment_1()); }
	(rule__File__VersionAssignment_1)
	{ after(grammarAccess.getFileAccess().getVersionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__File__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__File__Group__2__Impl
	rule__File__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__File__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFileAccess().getHeaderAssignment_2()); }
	(rule__File__HeaderAssignment_2)
	{ after(grammarAccess.getFileAccess().getHeaderAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__File__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__File__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__File__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFileAccess().getScoreAssignment_3()); }
	(rule__File__ScoreAssignment_3)
	{ after(grammarAccess.getFileAccess().getScoreAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Version__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Version__Group__0__Impl
	rule__Version__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Version__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVersionAccess().getVersionAction_0()); }
	()
	{ after(grammarAccess.getVersionAccess().getVersionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Version__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Version__Group__1__Impl
	rule__Version__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Version__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVersionAccess().getVersionKeyword_1()); }
	'\\version'
	{ after(grammarAccess.getVersionAccess().getVersionKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Version__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Version__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Version__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVersionAccess().getValueAssignment_2()); }
	(rule__Version__ValueAssignment_2)
	{ after(grammarAccess.getVersionAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Header__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header__Group__0__Impl
	rule__Header__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeaderAccess().getHeaderAction_0()); }
	()
	{ after(grammarAccess.getHeaderAccess().getHeaderAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header__Group__1__Impl
	rule__Header__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeaderAccess().getHeaderKeyword_1()); }
	'\\header'
	{ after(grammarAccess.getHeaderAccess().getHeaderKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header__Group__2__Impl
	rule__Header__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeaderAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getHeaderAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header__Group__3__Impl
	rule__Header__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeaderAccess().getTitleAssignment_3()); }
	(rule__Header__TitleAssignment_3)
	{ after(grammarAccess.getHeaderAccess().getTitleAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeaderAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getHeaderAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Title__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Title__Group__0__Impl
	rule__Title__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Title__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTitleAccess().getTitleAction_0()); }
	()
	{ after(grammarAccess.getTitleAccess().getTitleAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Title__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Title__Group__1__Impl
	rule__Title__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Title__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTitleAccess().getTitleKeyword_1()); }
	'title'
	{ after(grammarAccess.getTitleAccess().getTitleKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Title__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Title__Group__2__Impl
	rule__Title__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Title__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTitleAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getTitleAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Title__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Title__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Title__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTitleAccess().getValueAssignment_3()); }
	(rule__Title__ValueAssignment_3)
	{ after(grammarAccess.getTitleAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Score__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Score__Group__0__Impl
	rule__Score__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Score__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScoreAccess().getScoreAction_0()); }
	()
	{ after(grammarAccess.getScoreAccess().getScoreAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Score__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Score__Group__1__Impl
	rule__Score__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Score__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScoreAccess().getScoreKeyword_1()); }
	'\\score'
	{ after(grammarAccess.getScoreAccess().getScoreKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Score__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Score__Group__2__Impl
	rule__Score__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Score__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScoreAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getScoreAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Score__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Score__Group__3__Impl
	rule__Score__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Score__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScoreAccess().getLessThanSignLessThanSignKeyword_3()); }
	'<<'
	{ after(grammarAccess.getScoreAccess().getLessThanSignLessThanSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Score__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Score__Group__4__Impl
	rule__Score__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Score__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScoreAccess().getStaffAssignment_4()); }
	(rule__Score__StaffAssignment_4)
	{ after(grammarAccess.getScoreAccess().getStaffAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Score__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Score__Group__5__Impl
	rule__Score__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Score__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScoreAccess().getLyricsAssignment_5()); }
	(rule__Score__LyricsAssignment_5)
	{ after(grammarAccess.getScoreAccess().getLyricsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Score__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Score__Group__6__Impl
	rule__Score__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Score__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScoreAccess().getGreaterThanSignGreaterThanSignKeyword_6()); }
	'>>'
	{ after(grammarAccess.getScoreAccess().getGreaterThanSignGreaterThanSignKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Score__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Score__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Score__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScoreAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getScoreAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Staff__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Staff__Group__0__Impl
	rule__Staff__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaffAccess().getStaffAction_0()); }
	()
	{ after(grammarAccess.getStaffAccess().getStaffAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Staff__Group__1__Impl
	rule__Staff__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaffAccess().getNewKeyword_1()); }
	'\\new'
	{ after(grammarAccess.getStaffAccess().getNewKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Staff__Group__2__Impl
	rule__Staff__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaffAccess().getStaffKeyword_2()); }
	'Staff'
	{ after(grammarAccess.getStaffAccess().getStaffKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Staff__Group__3__Impl
	rule__Staff__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaffAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getStaffAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Staff__Group__4__Impl
	rule__Staff__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaffAccess().getKeyAssignment_4()); }
	(rule__Staff__KeyAssignment_4)
	{ after(grammarAccess.getStaffAccess().getKeyAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Staff__Group__5__Impl
	rule__Staff__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaffAccess().getTimeAssignment_5()); }
	(rule__Staff__TimeAssignment_5)
	{ after(grammarAccess.getStaffAccess().getTimeAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Staff__Group__6__Impl
	rule__Staff__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaffAccess().getAbsoluteAssignment_6()); }
	(rule__Staff__AbsoluteAssignment_6)
	{ after(grammarAccess.getStaffAccess().getAbsoluteAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Staff__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaffAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getStaffAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Key__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Key__Group__0__Impl
	rule__Key__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Key__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyAccess().getKeyAction_0()); }
	()
	{ after(grammarAccess.getKeyAccess().getKeyAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Key__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Key__Group__1__Impl
	rule__Key__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Key__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyAccess().getKeyKeyword_1()); }
	'\\key'
	{ after(grammarAccess.getKeyAccess().getKeyKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Key__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Key__Group__2__Impl
	rule__Key__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Key__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyAccess().getCKeyword_2()); }
	'c'
	{ after(grammarAccess.getKeyAccess().getCKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Key__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Key__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Key__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyAccess().getMajorKeyword_3()); }
	'\\major'
	{ after(grammarAccess.getKeyAccess().getMajorKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Time__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Time__Group__0__Impl
	rule__Time__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeAccess().getTimeAction_0()); }
	()
	{ after(grammarAccess.getTimeAccess().getTimeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Time__Group__1__Impl
	rule__Time__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeAccess().getTimeKeyword_1()); }
	'\\time'
	{ after(grammarAccess.getTimeAccess().getTimeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Time__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeAccess().getDigitFourSolidusDigitFourKeyword_2()); }
	'4/4'
	{ after(grammarAccess.getTimeAccess().getDigitFourSolidusDigitFourKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Absolute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Absolute__Group__0__Impl
	rule__Absolute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Absolute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbsoluteAccess().getAbsoluteAction_0()); }
	()
	{ after(grammarAccess.getAbsoluteAccess().getAbsoluteAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Absolute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Absolute__Group__1__Impl
	rule__Absolute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Absolute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbsoluteAccess().getAbsoluteKeyword_1()); }
	'\\absolute'
	{ after(grammarAccess.getAbsoluteAccess().getAbsoluteKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Absolute__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Absolute__Group__2__Impl
	rule__Absolute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Absolute__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbsoluteAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getAbsoluteAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Absolute__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Absolute__Group__3__Impl
	rule__Absolute__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Absolute__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbsoluteAccess().getItemsAssignment_3()); }
	(rule__Absolute__ItemsAssignment_3)*
	{ after(grammarAccess.getAbsoluteAccess().getItemsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Absolute__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Absolute__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Absolute__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbsoluteAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getAbsoluteAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Note__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group__0__Impl
	rule__Note__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getNoteAction_0()); }
	()
	{ after(grammarAccess.getNoteAccess().getNoteAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group__1__Impl
	rule__Note__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getNameAssignment_1()); }
	(rule__Note__NameAssignment_1)
	{ after(grammarAccess.getNoteAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group__2__Impl
	rule__Note__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getOctaveAssignment_2()); }
	(rule__Note__OctaveAssignment_2)
	{ after(grammarAccess.getNoteAccess().getOctaveAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Note__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoteAccess().getDurationAssignment_3()); }
	(rule__Note__DurationAssignment_3)
	{ after(grammarAccess.getNoteAccess().getDurationAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OctaveRep__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OctaveRep__Group_0__0__Impl
	rule__OctaveRep__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OctaveRep__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOctaveRepAccess().getQuotesAction_0_0()); }
	()
	{ after(grammarAccess.getOctaveRepAccess().getQuotesAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OctaveRep__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OctaveRep__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OctaveRep__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOctaveRepAccess().getValueAssignment_0_1()); }
	(rule__OctaveRep__ValueAssignment_0_1)*
	{ after(grammarAccess.getOctaveRepAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OctaveRep__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OctaveRep__Group_1__0__Impl
	rule__OctaveRep__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OctaveRep__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOctaveRepAccess().getCommasAction_1_0()); }
	()
	{ after(grammarAccess.getOctaveRepAccess().getCommasAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OctaveRep__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OctaveRep__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OctaveRep__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOctaveRepAccess().getValueAssignment_1_1()); }
	(rule__OctaveRep__ValueAssignment_1_1)*
	{ after(grammarAccess.getOctaveRepAccess().getValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Lyrics__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Lyrics__Group__0__Impl
	rule__Lyrics__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Lyrics__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLyricsAccess().getLyricsAction_0()); }
	()
	{ after(grammarAccess.getLyricsAccess().getLyricsAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Lyrics__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Lyrics__Group__1__Impl
	rule__Lyrics__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Lyrics__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLyricsAccess().getAddlyricsKeyword_1()); }
	'\\addlyrics'
	{ after(grammarAccess.getLyricsAccess().getAddlyricsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Lyrics__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Lyrics__Group__2__Impl
	rule__Lyrics__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Lyrics__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLyricsAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getLyricsAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Lyrics__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Lyrics__Group__3__Impl
	rule__Lyrics__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Lyrics__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLyricsAccess().getSyllablesAssignment_3()); }
	(rule__Lyrics__SyllablesAssignment_3)*
	{ after(grammarAccess.getLyricsAccess().getSyllablesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Lyrics__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Lyrics__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Lyrics__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLyricsAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getLyricsAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__File__VersionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFileAccess().getVersionVersionParserRuleCall_1_0()); }
		ruleVersion
		{ after(grammarAccess.getFileAccess().getVersionVersionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__File__HeaderAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFileAccess().getHeaderHeaderParserRuleCall_2_0()); }
		ruleHeader
		{ after(grammarAccess.getFileAccess().getHeaderHeaderParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__File__ScoreAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFileAccess().getScoreScoreParserRuleCall_3_0()); }
		ruleScore
		{ after(grammarAccess.getFileAccess().getScoreScoreParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Version__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVersionAccess().getValueSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getVersionAccess().getValueSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__TitleAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHeaderAccess().getTitleTitleParserRuleCall_3_0()); }
		ruleTitle
		{ after(grammarAccess.getHeaderAccess().getTitleTitleParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Title__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTitleAccess().getValueSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getTitleAccess().getValueSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Score__StaffAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScoreAccess().getStaffStaffParserRuleCall_4_0()); }
		ruleStaff
		{ after(grammarAccess.getScoreAccess().getStaffStaffParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Score__LyricsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScoreAccess().getLyricsLyricsParserRuleCall_5_0()); }
		ruleLyrics
		{ after(grammarAccess.getScoreAccess().getLyricsLyricsParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__KeyAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStaffAccess().getKeyKeyParserRuleCall_4_0()); }
		ruleKey
		{ after(grammarAccess.getStaffAccess().getKeyKeyParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__TimeAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStaffAccess().getTimeTimeParserRuleCall_5_0()); }
		ruleTime
		{ after(grammarAccess.getStaffAccess().getTimeTimeParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Staff__AbsoluteAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStaffAccess().getAbsoluteAbsoluteParserRuleCall_6_0()); }
		ruleAbsolute
		{ after(grammarAccess.getStaffAccess().getAbsoluteAbsoluteParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Absolute__ItemsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbsoluteAccess().getItemsNoteParserRuleCall_3_0()); }
		ruleNote
		{ after(grammarAccess.getAbsoluteAccess().getItemsNoteParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNoteAccess().getNameNoteNameEnumRuleCall_1_0()); }
		ruleNoteName
		{ after(grammarAccess.getNoteAccess().getNameNoteNameEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__OctaveAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNoteAccess().getOctaveOctaveRepParserRuleCall_2_0()); }
		ruleOctaveRep
		{ after(grammarAccess.getNoteAccess().getOctaveOctaveRepParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Note__DurationAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNoteAccess().getDurationINTTerminalRuleCall_3_0()); }
		RULE_INT
		{ after(grammarAccess.getNoteAccess().getDurationINTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OctaveRep__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOctaveRepAccess().getValueQuoteParserRuleCall_0_1_0()); }
		ruleQuote
		{ after(grammarAccess.getOctaveRepAccess().getValueQuoteParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OctaveRep__ValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOctaveRepAccess().getValueCommaParserRuleCall_1_1_0()); }
		ruleComma
		{ after(grammarAccess.getOctaveRepAccess().getValueCommaParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Lyrics__SyllablesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLyricsAccess().getSyllablesSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getLyricsAccess().getSyllablesSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
