/**
 * generated by Xtext 2.25.0
 */
package org.xtext.lilypond.lilyPond.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.lilypond.lilyPond.LilyPondPackage;
import org.xtext.lilypond.lilyPond.Lyrics;
import org.xtext.lilypond.lilyPond.Score;
import org.xtext.lilypond.lilyPond.Staff;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Score</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.lilypond.lilyPond.impl.ScoreImpl#getStaff <em>Staff</em>}</li>
 *   <li>{@link org.xtext.lilypond.lilyPond.impl.ScoreImpl#getLyrics <em>Lyrics</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ScoreImpl extends MinimalEObjectImpl.Container implements Score
{
  /**
   * The cached value of the '{@link #getStaff() <em>Staff</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStaff()
   * @generated
   * @ordered
   */
  protected Staff staff;

  /**
   * The cached value of the '{@link #getLyrics() <em>Lyrics</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLyrics()
   * @generated
   * @ordered
   */
  protected Lyrics lyrics;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ScoreImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return LilyPondPackage.Literals.SCORE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Staff getStaff()
  {
    return staff;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetStaff(Staff newStaff, NotificationChain msgs)
  {
    Staff oldStaff = staff;
    staff = newStaff;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, LilyPondPackage.SCORE__STAFF, oldStaff, newStaff);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setStaff(Staff newStaff)
  {
    if (newStaff != staff)
    {
      NotificationChain msgs = null;
      if (staff != null)
        msgs = ((InternalEObject)staff).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - LilyPondPackage.SCORE__STAFF, null, msgs);
      if (newStaff != null)
        msgs = ((InternalEObject)newStaff).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - LilyPondPackage.SCORE__STAFF, null, msgs);
      msgs = basicSetStaff(newStaff, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LilyPondPackage.SCORE__STAFF, newStaff, newStaff));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Lyrics getLyrics()
  {
    return lyrics;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLyrics(Lyrics newLyrics, NotificationChain msgs)
  {
    Lyrics oldLyrics = lyrics;
    lyrics = newLyrics;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, LilyPondPackage.SCORE__LYRICS, oldLyrics, newLyrics);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLyrics(Lyrics newLyrics)
  {
    if (newLyrics != lyrics)
    {
      NotificationChain msgs = null;
      if (lyrics != null)
        msgs = ((InternalEObject)lyrics).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - LilyPondPackage.SCORE__LYRICS, null, msgs);
      if (newLyrics != null)
        msgs = ((InternalEObject)newLyrics).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - LilyPondPackage.SCORE__LYRICS, null, msgs);
      msgs = basicSetLyrics(newLyrics, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LilyPondPackage.SCORE__LYRICS, newLyrics, newLyrics));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case LilyPondPackage.SCORE__STAFF:
        return basicSetStaff(null, msgs);
      case LilyPondPackage.SCORE__LYRICS:
        return basicSetLyrics(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case LilyPondPackage.SCORE__STAFF:
        return getStaff();
      case LilyPondPackage.SCORE__LYRICS:
        return getLyrics();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case LilyPondPackage.SCORE__STAFF:
        setStaff((Staff)newValue);
        return;
      case LilyPondPackage.SCORE__LYRICS:
        setLyrics((Lyrics)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case LilyPondPackage.SCORE__STAFF:
        setStaff((Staff)null);
        return;
      case LilyPondPackage.SCORE__LYRICS:
        setLyrics((Lyrics)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case LilyPondPackage.SCORE__STAFF:
        return staff != null;
      case LilyPondPackage.SCORE__LYRICS:
        return lyrics != null;
    }
    return super.eIsSet(featureID);
  }

} //ScoreImpl
