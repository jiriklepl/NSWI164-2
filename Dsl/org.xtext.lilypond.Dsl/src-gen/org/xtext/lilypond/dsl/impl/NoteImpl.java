/**
 * generated by Xtext 2.25.0
 */
package org.xtext.lilypond.dsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.lilypond.dsl.DslPackage;
import org.xtext.lilypond.dsl.Note;
import org.xtext.lilypond.dsl.NoteName;
import org.xtext.lilypond.dsl.Octave;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Note</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.lilypond.dsl.impl.NoteImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.lilypond.dsl.impl.NoteImpl#getOctave <em>Octave</em>}</li>
 *   <li>{@link org.xtext.lilypond.dsl.impl.NoteImpl#getDuration <em>Duration</em>}</li>
 *   <li>{@link org.xtext.lilypond.dsl.impl.NoteImpl#getSyllable <em>Syllable</em>}</li>
 * </ul>
 *
 * @generated
 */
public class NoteImpl extends MinimalEObjectImpl.Container implements Note
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final NoteName NAME_EDEFAULT = NoteName.A;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected NoteName name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getOctave() <em>Octave</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOctave()
   * @generated
   * @ordered
   */
  protected Octave octave;

  /**
   * The default value of the '{@link #getDuration() <em>Duration</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDuration()
   * @generated
   * @ordered
   */
  protected static final int DURATION_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getDuration() <em>Duration</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDuration()
   * @generated
   * @ordered
   */
  protected int duration = DURATION_EDEFAULT;

  /**
   * The default value of the '{@link #getSyllable() <em>Syllable</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSyllable()
   * @generated
   * @ordered
   */
  protected static final String SYLLABLE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSyllable() <em>Syllable</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSyllable()
   * @generated
   * @ordered
   */
  protected String syllable = SYLLABLE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected NoteImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DslPackage.Literals.NOTE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NoteName getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(NoteName newName)
  {
    NoteName oldName = name;
    name = newName == null ? NAME_EDEFAULT : newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.NOTE__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Octave getOctave()
  {
    return octave;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetOctave(Octave newOctave, NotificationChain msgs)
  {
    Octave oldOctave = octave;
    octave = newOctave;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslPackage.NOTE__OCTAVE, oldOctave, newOctave);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOctave(Octave newOctave)
  {
    if (newOctave != octave)
    {
      NotificationChain msgs = null;
      if (octave != null)
        msgs = ((InternalEObject)octave).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslPackage.NOTE__OCTAVE, null, msgs);
      if (newOctave != null)
        msgs = ((InternalEObject)newOctave).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslPackage.NOTE__OCTAVE, null, msgs);
      msgs = basicSetOctave(newOctave, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.NOTE__OCTAVE, newOctave, newOctave));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getDuration()
  {
    return duration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDuration(int newDuration)
  {
    int oldDuration = duration;
    duration = newDuration;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.NOTE__DURATION, oldDuration, duration));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getSyllable()
  {
    return syllable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSyllable(String newSyllable)
  {
    String oldSyllable = syllable;
    syllable = newSyllable;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.NOTE__SYLLABLE, oldSyllable, syllable));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DslPackage.NOTE__OCTAVE:
        return basicSetOctave(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DslPackage.NOTE__NAME:
        return getName();
      case DslPackage.NOTE__OCTAVE:
        return getOctave();
      case DslPackage.NOTE__DURATION:
        return getDuration();
      case DslPackage.NOTE__SYLLABLE:
        return getSyllable();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DslPackage.NOTE__NAME:
        setName((NoteName)newValue);
        return;
      case DslPackage.NOTE__OCTAVE:
        setOctave((Octave)newValue);
        return;
      case DslPackage.NOTE__DURATION:
        setDuration((Integer)newValue);
        return;
      case DslPackage.NOTE__SYLLABLE:
        setSyllable((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DslPackage.NOTE__NAME:
        setName(NAME_EDEFAULT);
        return;
      case DslPackage.NOTE__OCTAVE:
        setOctave((Octave)null);
        return;
      case DslPackage.NOTE__DURATION:
        setDuration(DURATION_EDEFAULT);
        return;
      case DslPackage.NOTE__SYLLABLE:
        setSyllable(SYLLABLE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DslPackage.NOTE__NAME:
        return name != NAME_EDEFAULT;
      case DslPackage.NOTE__OCTAVE:
        return octave != null;
      case DslPackage.NOTE__DURATION:
        return duration != DURATION_EDEFAULT;
      case DslPackage.NOTE__SYLLABLE:
        return SYLLABLE_EDEFAULT == null ? syllable != null : !SYLLABLE_EDEFAULT.equals(syllable);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", duration: ");
    result.append(duration);
    result.append(", syllable: ");
    result.append(syllable);
    result.append(')');
    return result.toString();
  }

} //NoteImpl
